# Informations the cool GUI will show
[ToolInfo]
# Title=<string>                    The title FEMDAQ will show within its title-bar
# Operator=<string>                 The name of the operator is printed to the status-bar
# Description=<string>              The description is printed to the status-bar
# Comment=<string>                  This is just for you
Title=FEMDAQ
Operator=Your Name
Description=What is it measuring or something
Comment=

# Other tool-settings
[ToolSettings]
# SaveResultsGrouped=<bool>         Should each save grouped into a newly created folder (named after a timestamp)
SaveResultsGrouped=false

# Information for a auto-load sweepfile
[SweepInfo]
# StartupSweep=<string>             Can be an absolute or relative (to FEMDAQ.exe) path to a sweepfile which is the automatically loaded after the ini
StartupSweep=./Sample/Path/Relative/To/Exe.swp

# Timing-Informations
[Timing]
# Initial=<uint>                    Cycle-duration for the first/initial step when starting a measurement in [ms]
# Iterative=<uint>                  Cycle-duration for all other steps expect the first one in [ms]
# Comment=<string>                  This is just for you
Initial=2000
Iterative=2000
Comment=



## FEAR16v2 provides as drawnOver: DevXY|Ch<int>|<Type>
##  where <Type> = CC (CurrentControl), CF (CurrentFlow), UD (FET VoltageDrop)
##  ATTENTION! CF and UD of the corresponding channel is not measured, the drawnOver-Value will be 0!
#[DevXY|FEAR16v2]
##---------------- General settings ----------------
## ComPort=COM<uint>                 COM-Port of the device
## Baudrate=<uint>                   Communication speed of the device in [baud]
## Comment=<string>                  This is just for you
#ComPort=COM4
#Baudrate=921600
#Comment=
##---------------- CurrentControl ----------------
## Ch<uint>CC=<int>							Channel 0-15 is connected to headercolumn: CC<int>
#Ch0CC=0
##---------------- CurrentFlow ----------------
## Ch<uint>CF=<int>							Channel 0-15 CurrentFlow measurement: <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
##   Hint: Unlisted Channels (no Ch<int>CF=<int> line) also disables the channel!
## Ch<uint>CFChartIdentifier=Chart<int>		Channel 0-15 plots data to Chart<int> (can have multiple entries separated by ",")
## Ch<uint>CFChartDrawnOver=<drawnOverSpec>	Channel 0-15 plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## Ch<uint>CFChartColor=<color>				Channel 0-15 plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
## Ch<uint>CFCustomName=<string>			Channel 0-15 contains <string> in it's saved data-filename, otherwise the file gets a standard-filename
#Ch0CF=0
#Ch0CFChartIdentifier=Chart1, Chart2
#Ch0CFChartDrawnOver=Time, DevXY
#Ch0CFChartColor=red, red
#Ch0CFCustomName=
##---------------- FET VoltageDrop ----------------
## Ch<uint>UD=<int>							Channel 0-15 FET VoltageDrop measurement: <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
##   Hint: Unlisted Channels (no Ch<int>CF=<int> line) also disables the channel!
## Ch<uint>UDChartIdentifier=Chart<int>		Channel 0-15 plots data to Chart<int> (can have multiple entries separated by ",")
## Ch<uint>UDChartDrawnOver=<drawnOverSpec>	Channel 0-15 plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## Ch<uint>UDChartColor=<color>				Channel 0-15 plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
## Ch<uint>UDCustomName=<string>			Channel 0-15 contains <string> in it's saved data-filename, otherwise the file gets a standard-filename
#Ch0UD=0
#Ch0UDChartIdentifier=Chart1, Chart2
#Ch0UDChartDrawnOver=Time, DevXY
#Ch0UDChartColor=blue, blue
#Ch0UDCustomName=


## KE6517B provides as drawnOver: DevXY
##  where the result is always the output-voltage
#[DevXY|KE6517B]
##---------------- General settings ----------------
## GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
##                                    Possible adresses: 0,            27/28,          0
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#GpibAddr=0, 27, 0
#CustomName=
#Comment=
##---------------- SourceControl ----------------
## SourceNode=<#>                    Source is connected to headercolumn "U<#>"; -1 disables the source
#SourceNode=2
##---------------- Measurement ----------------
## MeasureType=<Type>                Measurement of: Volt[age], Char[ge], Resi[stance], Curr[ent]
## MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
## Range=<int/double>                Range depends on <Type>;  <int> = 0 (Autorange is valid for all)
##                                                             Volt: <int> = 2, 20, 200[V]
##                                                             Curr: <double> = 20e-12 ... 20e-3 [A] (in decades!)
##                                                             For other look into the datasheet
## Nplc=<double>                     Integrationtime in NetPowerLineCycles: <double> = 0 ... 20 (* 1/50Hz) [ms]; not sure about the double and min/max value
## ZeroCheck=<bool>                  Connect measurementchannel to reference resistor: <bool> = true/false
## ZeroCorrection=<bool>             Offsetcorrection: <bool> = true/false;
#MeasureType=Curr
#MeasureInstantly=0
#Range=0
#Nplc=5
#ZeroCheck=false
#ZeroCorrection=true
##---------------- DataPlot ----------------
## ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
## ChartDrawnOver=<drawnOverSpec>    Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#ChartIdentifier=Chart1, Chart2
#ChartDrawnOver=Time, DevXY
#ChartColor=darkcyan, purple


## KE6485 provides as drawnOver: DevXY
##  returns always 0 (has no source)
#[DevXY|KE6485]
##---------------- General settings ----------------
## GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
##                                    Possible adresses: 0,            14,             0
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#GpibAddr=0, 14, 0
#CustomName=
#Comment=
##---------------- Measurement ----------------
## MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
## Range=<double>                    Measurment-Range: <double> = 20e-12 ... 20e-3 [A] (in decades!); Not sure about min-value
## Nplc=<double>                     Integrationtime in NetPowerLineCycles: <double> = 0 ... 20 (* 1/50Hz) [ms]; not sure about the double and min/max value
## ZeroCheck=<bool>                  Connect measurementchannel to reference resistor: <bool> = true/false
## AutoZero=<bool>                   Offsetcorrection: <bool> = true/false;
#MeasureInstantly=0
#Range=20e-3
#Nplc=5
#ZeroCheck=false
#AutoZero=true
##---------------- DataPlot ----------------
## ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
## ChartDrawnOver=<drawnOverSpecs>   Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#ChartIdentifier=Chart1, Chart2
#ChartDrawnOver=Time, DevXY
#ChartColor=orange, orange


## KE6487 provides as drawnOver: DevXY
##  where the result is always the output-voltage
#[DevXY|KE6487]
##---------------- General settings ----------------
## GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
##                                    Possible adresses: 0,            21/22,          0
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#GpibAddr=0, 22, 0
#CustomName=
#Comment=
##---------------- SourceControl ----------------
## SourceNode=<int>                  Source is connected to headercolumn "U<int>"; -1 disables the source
## Compliance=<double>               Maximum current allowed by source: Not sure about max/min values
#SourceNode=1
#Compliance=2.5e-3
##---------------- Measurement ----------------
## MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
## Range=<double>                    Measurment-Range: <double> = 20e-12 ... 20e-3 [A] (in decades!); Not sure about min-value
## Nplc=<double>                     Integrationtime in NetPowerLineCycles: <double> = 0 ... 20 (* 1/50Hz) [ms]; not sure about the double and min/max value
## ZeroCheck=<bool>                  Connect measurementchannel to reference resistor: <bool> = true/false
## AutoZero=<bool>                   Offsetcorrection: <bool> = true/false;
#MeasureInstantly=0
#Range=0
#Nplc=5
#ZeroCheck=false
#AutoZero=true
##---------------- DataPlot ----------------
## ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
## ChartDrawnOver=<drawnOverSpecs>   Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#ChartIdentifier=Chart1, Chart2
#ChartDrawnOver=Time, DevXY
#ChartColor=green, green


## DMM7510 provides as drawnOver: DevXY
##  returns always 0 (no source available)
#[DevXY|DMM7510]
##---------------- General settings ----------------
## GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
##                                    Possible adresses: 0,            18/19,          0
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#GpibAddr=0, 18, 0
#CustomName=I call it DMM7510
#Comment=Gate-current
##---------------- Measurement ----------------
## MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
## MeasureType=<Type>                Measurement of: VOLT(age), CURR(ent)
## Coupling=<Type>                   Coupling of the measuremen: DC (direct current), AC (alternating current)
## Range=<int/double>                Range depends on <Type>;  <int> = 0 (Autorange is valid for all)
##                                                             VOLT: <double> = 100e-3 ... 1e3 [V] (in decades)
##                                                             CURR: <double> = 10e-6 ... 1 & 3 [A] (in decades)
## Nplc=<double>                     Integrationtime in NetPowerLineCycles: <double> = 0.5e-3 ... 12 (* 1/50Hz) [ms]; min = 10µs, max = 240ms
## AutoZero=<bool>                   Offsetcorrection: <bool> = true/false;
#MeasureInstantly=0
#MeasurementType=CURR
#Coupling=DC
#Range=0
#Nplc=5
#AutoZero=true
##---------------- DataPlot ----------------
## ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
## ChartDrawnOver=<drawnOverSpecs>   Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#ChartIdentifier=Chart1, Chart2
#ChartDrawnOver=Time, DevXY
#ChartColor=green, green


## RTO2034 provides as drawnOver: DevXY
##  returns always 0 (no source available)
## Each infoblock can represent 1 of 4 channels connected to the same IP
## The settings of x-axis and trigger are only effacicous of the FIRST found parameterset!
#[DevXY|RTO2034|Channel1|Waveform1]
##---------------- General settings ----------------
## GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
##                                    Possible adresses: 0,            18/19,          0
## Comment=<string>                  This is just for you
#Ip=192.168.137.2
#Comment=RTO Osci
##---------------- Common measurement settings----------------
## MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
## QuantPerDivX=<double>             X-Division of the data
## QuantPerDivY=<double>             Y-Division of the data
## SampleRate=<uint>                 Amount of points sampled
#MeasureInstantly=1
#QuantPerDivY=500e-3
#QuantPerDivX=500e-6
#SampleRate=2.5e6
##---------------- Measurement Waveform ----------------
## TriggerOnWaveform=<bool>          Should the trigger sample on this channel
## TriggerLevel=<double>             Triggerlevel if TriggerOnWaveform=true
## TriggerSource=<string>            On which channel the trigger should react: <string> = Channel1, Channel2, Channel3, Channel4, External
## TriggerType=<string>              Type of triggering: <string> = Normal (only when trigger occurs), Auto (on trigger or if too long no trigger occured), FreeRun
## TriggerType=<string>|<string>     Defines the trigger-condition: 1. <string> = Edge
##                                                                  2. <string> = Rising, Falling, Either (both)
## ReadWaveform=<int>                Read out the waveform-data: <int> = 0 (no readout) else waveform is readed
## UpdateDisplay=<bool>              Update the RTO-Display: <bool> = true/false
## WaveformCustomName=<string>       Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
#TriggerOnWaveform=true
#TriggerLevel=2
#TriggerSource=Channel1
#TriggerMode=Normal
#TriggerType=Edge|Falling
#ReadWaveform=1
#UpdateDisplay=true
#WaveformCustomName=I call it RTO Waveform
##---------------- DataPlot Waveform----------------
## WaveformChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ","); Not recommended for RTO, due to (mostly) too much datapoints -> Chart can't handle them fast enough
## WaveformChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                           Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#WaveformChartIdentifier=
## Possible colors see _ColorTable.png; Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#WaveformChartColor=darkcyan
#
##---------------- Measurement FFT ----------------
## UseFFTOnMathWindow=<int>          Should a FFT carried out on waveform-data: <int> = 1 ... 4 (number of math-window) else unused
## TriggerOnFFT=<bool>               Do an extra trigger before FFT-readout: <bool> = true/false
## FrequencyResolution=<uint>        Resolution of the frequency-bands: <uint> = depending on time-settings of the corresponding waveform
## StartFrequency=<uint>             Lower frequency of the FFT-data
## StopFrequency=<uint>              Upper frequency of the FFT-data
## MagnitudeOffset=<int>             Upper level of the FFT-yaxis
## MagnitudeRange=<int>              Range of the FFT-yaxis (lower level = MagnitudeOffset + <int>)
## WindowType=<string>               Windowfunction for timedomain-data: <string> = Rectangle (None), Hamming, Hanning, BlackmanHarris, Gauss, Flattop, KaiserBessel
## FFTCustomName=<string>            Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
#UseFFTOnMathWindow=0
#TriggerOnFFT=false
#FrequencyResolution=1
#StartFrequency=0
#StopFrequency=2e3
#MagnitudeOffset=-30
#MagnitudeRange=120
#WindowType=KaiserBessel
#FFTCustomName=I call it RTO FFT
##---------------- DataPlot Waveform----------------
## FFTChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ","); Not recommended for RTO, due to (mostly) too much datapoints -> Chart can't handle them fast enough
## FFTChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                           Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#FFTChartIdentifier=Chart4
#FFTChartColor=darkcyan


## FUGMCP140 provides as drawnOver: DevXY
##  where the result is always the output-voltage
#[DevXY|FUGMCP140]
##---------------- General settings ----------------
## GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
##                                    Possible adresses: 0,            7,              0
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#GpibAddr=0, 7, 0
#CustomName=MCP140
#Comment=Heyho, I'm an MCP
###---------------- SourceControl ----------------
### SourceNode=<int>                  Source is connected to headercolumn "U<int>"; -1 disables the source
### Compliance=<double>               Maximum current allowed by source: Not sure about max/min values
#SourceNode=1
#Compliance=60e-3


## FUGMCP350 provides as drawnOver: DevXY
##  where the result is always the output-voltage
#[DevXY|FUGHCP350]
##---------------- General settings ----------------
## GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
##                                    Possible adresses: 0,            8,              0
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#GpibAddr=0, 8, 0
#CustomName=I call it FUG
#Comment=High voltage source
##---------------- SourceControl ----------------
## SourceNode=<int>                  Source is connected to headercolumn "U<int>"; -1 disables the source
## Compliance=<double>               Maximum current allowed by source: Not sure about max/min values
#SourceNode=1
#Compliance=20e-3


## WavGen33511B provides as drawnOver: DevXY|<Type>
##  where <Type> = L (LowerLevel), H (HighLevel), F (Frequency), O (Offset), D (DutyCycle), all other is Amplitude
#[DevXY|WavGen33511B]
##---------------- General settings ----------------
## GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
##                                    Possible adresses: 0,            11,             0
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#GpibAddr=0, 11, 0
#CustomName=I call it WavGen
#Comment=WaveGenerator
##---------------- SourceControl ----------------
## Waveform=<string>                 Type of output-waveform: DC (DirectCurrent), Sin(us), Puls(e), Ramp, Squ(are)
## SourceNode=<int>                  Source is connected to the corresponding headercolumns (depending on waveform) with <int> for:
##                                      DC-waveform only accepts:
##                                         O<int>: (Offset)
##                                      All other waveforms accepts in common:
##                                         F<int> or P<double>: Frequency or Period
##                                 wether  A<int> and O<double>: Amplitude and Offset
##                                 or      L<int> and H<double>: High and Low-levels
##                                      Square-Specific:
##                                         D<int>: Duty-Cycle
##                                      Ramp-Specific:
##                                         S<int>: Symmetricity
##                                      Pulse-Specific:
##                                         PW<int>: Pulse-Width
## OutputLoad=<int>                  Ohms of the outputload or -1 for HighZ
## Phase=<double>                    Phase-Shift in [°]
#Waveform=puls
#SourceNode=1
#OutputLoad=-1
#Phase=0
##---------------- Waveform-specific parameters ----------------
## DC, Square, Ramp:
##    None
## Pulse:
##    LeadEdge=<double>              Linear Transitiontime of the leading edge (raising or falling depends on output inverted or not!)
##    TrailEdge=<double>             Linear Transitiontime of the trailing edge (raising or falling depends on output inverted or not!)
#LeadEdge=100e-9
#TrailEdge=100e-9
##---------------- Burst-Mode ----------------
## UseBurst=<int>                    Using bursts: 0 (off) else (on)
## BurstPeriod=<double>              Time for new burst-trigger in [s]
## BurstCycles=<int>                 Amount of bursts per trigger
#UseBurst=0
#BurstPeriod=450e-3
#BurstCycles=1



## VSH8x provides as drawnOver: DevXY
##  where the result is always the measured pressure
#[DevXY|VSH8x]
##---------------- General settings ----------------
## ComPort=COM<uint>                 COM-Port of the device
## Rs485Address=001                  Internal RS485-address (always 001)
## Baudrate=<uint>                   Communication speed of the device in [baud]
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#ComPort=COM2
#Rs485Address=001
#Baudrate=115200
#CustomName=VSH8
#Comment=
##---------------- Measurement ----------------
## MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
#MeasureInstantly=0
##---------------- DataPlot ----------------
## ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
## ChartDrawnOver=<drawnOverSpecs>   Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#ChartIdentifier=Chart1
#ChartDrawnOver=Time
#ChartColor=green


## VD9x provides as drawnOver: DevXY
##  where the result is always the measured pressure
#[DevXY|VD9x]
##---------------- General settings ----------------
## ComPort=COM<uint>                 COM-Port of the device
## Baudrate=<uint>                   Communication speed of the device in [baud]
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#ComPort=COM3
#Baudrate=115200
#CustomName=I call it VD9x
#Comment=Pressures
##---------------- Measurement ----------------
## MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
#MeasureInstantly=0
##---------------- DataPlot ----------------
## ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
## ChartDrawnOver=<drawnOverSpecs>   Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#ChartIdentifier=Chart1
#ChartDrawnOver=Time
#ChartColor=green



## MOVE1250 provides as drawnOver: DevXY
##  where the result is always its currently set valve-position
#[DevXY|MOVE1250]
##---------------- General settings ----------------
## ComPort=COM<uint>                 COM-Port of the device
## Baudrate=300                      This is fixed by the corresponding device-driver!
## ResponseTime=<int>                Timeout-value in [ms]: 250ms <= <int> <= 1750ms; For small movements 250ms is okay, but bigger ones needs more! 500ms is a good compromise
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#ComPort=COM4
#ResponseTime=500
#CustomName=I call it MOVE1250
#Comment=Elektronsiches Ventil
##---------------- SourceControl ----------------
## SourceNode=<int>                  Source is connected to headercolumn "P<int>"; -1 disables the source
#SourceNode=9



## SR785 provides as drawnOver: DevXY
##  returns always 0 (no source available)
#[DevXY|SR785]
##---------------- General settings ----------------
## GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
##                                    Possible adresses: 0,            10,             0
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#GpibAddr=0, 10, 0
#CustomName=I call it SR785
#Comment=Spectrumanalyzer
##---------------- Measurement ----------------
## MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
## XAxis:
##    XAxisView=<string>             X-Axis is: Lin(ear), Log(arithmic); Invalid inputs = Logarithmic axis
##    StartFrequency=<uint>          Left boundary frequency of the x-axis in [Hz]
##    FrequencySpan=<uint>           StartFrequency + FrequencySpan = Right Border of the x-axis. Span is given in [Hz]
##    FFTLines=<uint>                Amount of FFT-Frequency-intervals: 100, 200, 400, 800; Invalid inputs = 800
## YAxis:
##    YAxisView=<string>             Y-Axis shows: LogMag (Logarithmic Magnitude), LinMag (Linear Magnitude), MagSquared (Squared Magnitude), Real (part of magnitude), Imaginary (part of magnitude); Invalid inputs = LogMag
##    YdBUnit=<string>               Unit of y-axis: Off, dB, dBm; Invalid inputs = off
##    YPeakUnit=<string>             Type of the peak: Peak, PeakRMS (peak of root mean square), PeakPeak (peak 2 peak); Invalid inputs = peak
##    YMin=<int>                     Lower border of the y-axis
##    YMax=<int>                     Upper border of the y-axis
## DisplayedAverage=<string>         Display averaged: None, Vector, RMS (root mean square), PeakHold; Invalid inputs = none
## Averages=<uint>                   Number of averages
## TimeRecordIncrement=<double>      Not sure anymore what this is doing: ? <= <double> <= 300
## WindowType=<string>               Filterwindow: Uniform (no window/rectangle), Flattop, Hanning, BlackmanHarris, Kaiser, Exponential; Invalid inputs = uniform
## ExponentialTimeConstant=<double>  Timeconstant for exponential window (? <= <double> <= 1000)
#MeasureInstantly=0
#XAxisView=Log
#StartFrequency=0
#FrequencySpan=100
#FFTLines=800
#YAxisView=LogMag
#YdBUnit=dB
#YPeakUnit=Peak
#YMin=-60
#YMax=20
#DisplayedAverage=None
#Averages=0
#TimeRecordIncrement=100
#WindowType=BlackmanHarris
#ExponentialTimeConstant=100
##---------------- DataPlot ----------------
## ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
## ChartDrawnOver=<drawnOverSpecs>   Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#ChartIdentifier=Chart4
#ChartDrawnOver=Time
#ChartColor=green


## HP4145B provides as drawnOver: DevXY
##  returns always 0 (no source available)
## Supports different measurechannels: SMU1, SMU2, SMU3, SMU4
#[DevXY|HP4145B|SMU1]
##---------------- General settings ----------------
## GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
##                                    Possible adresses: 0,            12,             0
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#GpibAddr=0, 12, 0
#CustomName=I call it HP4145B
#Comment=Parameteranalyzer
##---------------- SourceControl ----------------
# SourceNode=<int>                  Source is connected to headercolumn "U<int>"/"I<int>" (depends on compliance); -1 disables the source
## Compliance=<double>|<string>      Maximum current allowed by source: Not sure about max/min values
##                                   <double>: compliance-value which depends on <string>
##                                   <string> is the type of controlled value: V connects the device to U<SourceNode>, A to I<SourceNode>
#SourceNode=1
#Compliance=10|V
##---------------- Measurement ----------------
## MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
## MeasureMode=<string>              <string>: Current or voltage
## Range=<double>                    Range as <double> or Auto-Range = 0
## IntegrationTime=<string>          <string>: short, medium or long (i don't know how long they are in numbers)
#MeasureInstantly=0
#MeasureMode=Current
#Range=2e-3
#IntegrationTime=Medium
##---------------- DataPlot ----------------
## ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
## ChartDrawnOver=<drawnOverSpecs>   Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#ChartIdentifier=Chart1
#ChartDrawnOver=Time
#ChartColor=green


## HP4155B provides as drawnOver: DevXY
##  returns always 0 (no source available)
## Supports different measurechannels: SMU1, SMU2, SMU3, SMU4
#[DevXY|HP4155B|SMU1]
##---------------- General settings ----------------
## GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
##                                    Possible adresses: 0,            13,             0
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#GpibAddr=0, 13, 0
#CustomName=I call it HP4155B
#Comment=Parameteranalyzer
##---------------- SourceControl ----------------
# SourceNode=<int>                  Source is connected to headercolumn "U<int>"/"I<int>" (depends on compliance); -1 disables the source
## Compliance=<double>|<string>      Maximum current allowed by source: Not sure about max/min values
##                                   <double>: compliance-value which depends on <string>
##                                   <string> is the type of controlled value: V connects the device to U<SourceNode>, A to I<SourceNode>
#SourceNode=1
#Compliance=10|V
##---------------- Measurement ----------------
## MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
## MeasureMode=<string>              <string>: Current or voltage
## Range=<double>                    Range as <double> or Auto-Range = 0
## IntegrationTime=<string>          <string>: short, medium or long (i don't know how long they are in numbers)
#MeasureInstantly=0
#MeasureMode=Current
#Range=2e-3
#IntegrationTime=Medium
##---------------- DataPlot ----------------
## ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
## ChartDrawnOver=<drawnOverSpecs>   Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#ChartIdentifier=Chart1
#ChartDrawnOver=Time
#ChartColor=green



## DSOX3034T provides as drawnOver: DevXY
##  returns always 0 (no source available)
## Supports different measurechannels: Channel1, Channel2, Channel3, Channel4
#[DevXY|DSOX3034T|Channel1]
##---------------- General settings ----------------
## Usb=<string>                      USB-Address (can be extracted from the device): USB0::10893::5988::MY58262808::INSTR
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#Usb=USB0::10893::5988::MY58262808::INSTR
#CustomName=I call it DSO
#Comment=This is the small Oscilloscope :)
##---------------- Measurement ----------------
## MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
## QuantPerDivX=<double>             X-Division in [V]; <double> <= 0 won't affect the scale
## QuantPerDivX=<double>             X-Division in [V]; <double> <= 0 won't affect the scale
## TriggerOnWaveform=<bool>          Should the trigger sample on this channel
## ForceTrigger=<bool>               Should the trigger be forced when starting measurement (depending on MeasureInstantly)
## TriggerSettings (when not forced):
##    TriggerLevel=<double>          When not forced: TriggerLevel
##    TriggerSource=<string>         When not forced: Channel1, Channel2, Channel3, Channel4 or External
##    TriggerMode=<string>           When not forced: Normal (only trigger on valid transition), Auto (trigger on valid transition or automatically if no trigger occured long enough)
##    TriggerType=<string>|<string>  First  <string>: Edge (more possible but not implemented)
##                                   Second <string>: Rising, Falling, Either or Alternate
#MeasureInstantly=1
#QuantPerDivX=1e-3
#QuantPerDivY=1
#TriggerOnWaveform=true
#ForceTrigger=false
#TriggerLevel=0
## TriggerSource: Channel1, Channel2, Channel3, Channel4 or External
#TriggerSource=Channel1
## TriggerMode: Normal or Auto
#TriggerMode=Normal
## TriggerType: Edge
##  Slope: Rising, Falling, Either, Alternate
#TriggerType=Edge|Rising
##---------------- DataPlot ----------------
## ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
## ChartDrawnOver=<drawnOverSpecs>   Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#ChartIdentifier=Chart1
#ChartDrawnOver=Time
#ChartColor=green


## DSOX3000WavGen provides as drawnOver: DevXY|<Type>
##  where <Type> = L (LowerLevel), H (HighLevel), F (Frequency), O (Offset), D (DutyCycle), S (Symmetry), PW (PulsWidth), all other is Amplitude
## Supports different measurechannels: Channel1, Channel2, Channel3, Channel4
#[DevXY|DSOX3000WavGen]
##---------------- General settings ----------------
## Usb=<string>                      USB-Address (can be extracted from the device): USB0::10893::5988::MY58262808::INSTR
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#Usb=USB0::10893::5988::MY58262808::INSTR
#CustomName=I call it DSO Wavegenerator
#Comment=This is the WavGen-Feature of the DSOX ;)
##---------------- SourceControl ----------------
## Waveform=<string>                 Type of output-waveform: sinus, rectangle, ramp or sawtooth, pulse
## SourceNode=<int>                  Source is connected to the corresponding headercolumns (depending on waveform) with <int> for:
##                                      Waveforms accepts in common:
##                                         F<int> or P<double>: Frequency or Period
##                                 wether  A<int> and O<double>: Amplitude and Offset
##                                 or      L<int> and H<double>: High and Low-levels
##                                      Rectangle-Specific:
##                                         D<int>: Duty-Cycle
##                                      Ramp/Sawtooth-Specific:
##                                         S<int>: Symmetricity
##                                      Pulse-Specific:
##                                         PW<int>: Pulse-Width
## OutputLoad=<int>                  HighZ = -1, 0 < <int> <= 50 in [Ohm]
## InvertOutput=<bool>               Should the output-polarity inverted
## Phase=<double>                    Phase-Shift in [°]
#Waveform=sinus
#SourceNode=1
#OutputLoad=-1
#InvertOutput=false



##################### Unsupported ####################
## KE2400 provides as drawnOver: DevXY
##  returns always 0 (no source available)
#[DevXY|KE2400]
##---------------- General settings ----------------
## GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
##                                    Possible adresses: 0,            19,             0
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#GpibAddr=0, 19, 0
#CustomName=KE2400
#Comment=
##---------------- SourceControl ----------------
## SourceNode=<int>                  Source is connected to headercolumn "U<int>"/"I<int>" (depends on compliance); -1 disables the source
## Compliance=<double>|<string>      Maximum current allowed by source: Not sure about max/min values
##                                   <double>: compliance-value which depends on <string>
##                                   <string> is the type of controlled value: V connects the device to U<SourceNode>, A to I<SourceNode>
#SourceNode=1
#Compliance=Max
## MeasureType: Volt[age], Resi[stance], Curr[ent]
#MeasureType=Curr
## MeasureInstantly: -1 deactivate measurement, 0 measure at the end of the iterationcycle, 1 measure on start of iteration-cycle
#MeasureInstantly=0
## Volt-Ranges: 200mV up to 200V in decades
## Curr-Ranges: 1µA up to 100mA in decades
## Res-Ranges: 20Ohm up to 200MOhm in decades
#Range=20
## NPLC: 0.01 up to 10
#Nplc=5
#ChartIdentifier=Chart1
#ChartDrawnOver=DevXY
## Possible colors see _ColorTable.png; Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#ChartColor=green
######################################################



## DmyMU provides as drawnOver: DevXY
##  returns always 0 (no source available)
#[DevXY|DmyMU]
##---------------- General settings ----------------
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#CustomName=DMU
#Comment=Dummy Measurement Unit
##---------------- Measurement ----------------
## MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
## LowerBound=<double>               Lower boundary for "measurement"-random-numbers
## UpperBound=<double>               Upper boundary for "measurement"-random-numbers
#MeasureInstantly=0
#LowerBound=1e-9
#UpperBound=1e-7
##---------------- DataPlot ----------------
## ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
## ChartDrawnOver=<drawnOverSpecs>   Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#ChartIdentifier=Chart1, Chart2
#ChartDrawnOver=Time, DevXY
#ChartColor=orange, orange


## DmySU provides as drawnOver: DevXY
##  where the result is always its last SourceNode-value from the connected sweep-file
#[DevXY|DmySU]
##---------------- General settings ----------------
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#CustomName=DSU
#Comment=Dummy Source Unit
##---------------- SourceControl ----------------
## SourceNode=<int>                  Source is connected to headercolumn "U<int>"; -1 disables the source
#SourceNode=1



## DmySMU provides as drawnOver: DevXY
##  where the result is always its last SourceNode-value from the connected sweep-file
#[DevXY|DmySMU]
##---------------- General settings ----------------
## CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
## Comment=<string>                  This is just for you
#CustomName=DMU
#Comment=Dummy Measurement Unit
##---------------- SourceControl ----------------
## SourceNode=<int>                  Source is connected to headercolumn "U<int>"; -1 disables the source
#SourceNode=1
##---------------- Measurement ----------------
## MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
## LowerBound=<double>               Lower boundary for "measurement"-random-numbers
## UpperBound=<double>               Upper boundary for "measurement"-random-numbers
#MeasureInstantly=0
#LowerBound=1e-9
#UpperBound=1e-7
##---------------- DataPlot ----------------
## ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
## ChartDrawnOver=<drawnOverSpecs>   Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
## ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
##                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
#ChartIdentifier=Chart1, Chart2
#ChartDrawnOver=Time, DevXY
#ChartColor=orange, orange



# Chart-Blocks
[Chart1|Timechart]
# XAxisTitle=<string>                             Title for the x-axis
# YAxisTitle=<string>                             Title for the y-axis
# XAxisBoundaries=<fix><double>|<fix><double>     BETA-Feature
# YAxisBoundaries=<fix><double>|<fix><double>     BETA-Feature
#                                                 First  <fix>: @ will fix the lower boundary given by the first  <double>
#                                                 Second <fix>: @ will fix the upper boundary given by the second <double>
#                                                 Fixing only one boundary is not possible currently! You have to fix both!
# XAxisLogBase=<uint>                             <uint> is the log-base value for the x-axis (e.g. 0 and 1 is linear)
# YAxisLogBase=<uint>                             <uint> is the log-base value for the y-axis (e.g. 0 and 1 is linear)
# ShowLegend=<bool>                               Should the chart legend plotted
XAxisTitle=Time [s]
YAxisTitle=Current [I]
XAxisBoundaries=0|0
YAxisBoundaries=0|0
XAxisLogBase=0
YAxisLogBase=10
ShowLegend=1

[Chart2|Voltagechart]
# XAxisTitle=<string>                             Title for the x-axis
# YAxisTitle=<string>                             Title for the y-axis
# XAxisBoundaries=<fix><double>|<fix><double>     BETA-Feature
# YAxisBoundaries=<fix><double>|<fix><double>     BETA-Feature
#                                                 First  <fix>: @ will fix the lower boundary given by the first  <double>
#                                                 Second <fix>: @ will fix the upper boundary given by the second <double>
#                                                 Fixing only one boundary is not possible currently! You have to fix both!
# XAxisLogBase=<uint>                             <uint> is the log-base value for the x-axis (e.g. 0 and 1 is linear)
# YAxisLogBase=<uint>                             <uint> is the log-base value for the y-axis (e.g. 0 and 1 is linear)
# ShowLegend=<bool>                               Should the chart legend plotted
XAxisTitle=Voltage [V]
YAxisTitle=Current [I]
XAxisBoundaries=0|0
YAxisBoundaries=0|0
XAxisLogBase=0
YAxisLogBase=10
ShowLegend=1



