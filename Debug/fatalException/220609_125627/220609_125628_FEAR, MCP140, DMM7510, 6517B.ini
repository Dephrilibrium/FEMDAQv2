# Informations the cool GUI will show
[ToolInfo]
# Title=<string>                    The title FEMDAQ will show within its title-bar
# Operator=<string>                 The name of the operator is printed to the status-bar
# Description=<string>              The description is printed to the status-bar
# Comment=<string>                  This is just for you
Title=FEMDAQ
Operator=haum
Description=IVNC2022
Comment=Streifenemitter

# Other tool-settings
[ToolSettings]
# SaveResultsGrouped=<bool>         Should each save grouped into a newly created folder (named after a timestamp)
SaveResultsGrouped=false

# Information for a auto-load sweepfile
[SweepInfo]
# StartupSweep=<string>             Can be an absolute or relative (to FEMDAQ.exe) path to a sweepfile which is the automatically loaded after the ini
StartupSweep=

# Timing-Informations
[Timing]
# Initial=<uint>                    Cycle-duration for the first/initial step when starting a measurement in [ms]
# Iterative=<uint>                  Cycle-duration for all other steps expect the first one in [ms]
# Comment=<string>                  This is just for you
Initial=2000
Iterative=2000
Comment=


# FUGMCP140 provides as drawnOver: DevXY
#  where the result is always the output-voltage
[Dev7|FUGMCP140]
#---------------- General settings ----------------
# GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
#                                    Possible adresses: 0,            7,              0
# CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
# Comment=<string>                  This is just for you
GpibAddr=0, 7, 0
CustomName=MCP140
Comment=
##---------------- SourceControl ----------------
## SourceNode=<int>                  Source is connected to headercolumn "U<int>"; -1 disables the source
## Compliance=<double>               Maximum current allowed by source: Not sure about max/min values
SourceNode=7
Compliance=60e-3


# DMM7510 provides as drawnOver: DevXY
#  returns always 0 (no source available)
[Dev19|DMM7510]
#---------------- General settings ----------------
# GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
#                                    Possible adresses: 0,            18/19,          0
# CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
# Comment=<string>                  This is just for you
GpibAddr=0, 19, 0
CustomName=I_G
Comment=Gitterstrom (0-Potential)
#---------------- Measurement ----------------
# MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
# MeasureType=<Type>                Measurement of: VOLT(age), CURR(ent)
# Coupling=<Type>                   Coupling of the measuremen: DC (direct current), AC (alternating current)
# Range=<int/double>                Range depends on <Type>;  <int> = 0 (Autorange is valid for all)
#                                                             VOLT: <double> = 100e-3 ... 1e3 [V] (in decades)
#                                                             CURR: <double> = 10e-6 ... 1 & 3 [A] (in decades)
# Nplc=<double>                     Integrationtime in NetPowerLineCycles: <double> = 0.5e-3 ... 12 (* 1/50Hz) [ms]; min = 10Âµs, max = 240ms
# AutoZero=<bool>                   Offsetcorrection: <bool> = true/false;
MeasureInstantly=0
MeasurementType=CURR
Coupling=DC
Range=0
Nplc=5
AutoZero=true
#---------------- DataPlot ----------------
# ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
# ChartDrawnOver=<drawnOverSpecs>   Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
# ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
#                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
ChartIdentifier=Chart3
ChartDrawnOver=Time
ChartColor=black


# KE6517B provides as drawnOver: DevXY
#  where the result is always the output-voltage
[Dev27|KE6517B]
#---------------- General settings ----------------
# GpibAddr=<uint>, <uint>, <uint>   GPIB-Adress:        GPIB-Adapter, Primary-Adress, Secondary-Adress
#                                    Possible adresses: 0,            27/28,          0
# CustomName=<string>               Saved outputfile contains <string> in it's filename, otherwise the file gets a standard-filename
# Comment=<string>                  This is just for you
GpibAddr=0, 27, 0
CustomName=I_T
Comment=Ziehspannung, Transmissionsstrom
#---------------- SourceControl ----------------
# SourceNode=<#>                    Source is connected to headercolumn "U<#>"; -1 disables the source
SourceNode=27
#---------------- Measurement ----------------
# MeasureType=<Type>                Measurement of: Volt[age], Char[ge], Resi[stance], Curr[ent]
# MeasureInstantly=<int>            Measurement @ <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
# Range=<int/double>                Range depends on <Type>;  <int> = 0 (Autorange is valid for all)
#                                                             Volt: <int> = 2, 20, 200[V]
#                                                             Curr: <double> = 20e-12 ... 20e-3 [A] (in decades!)
#                                                             For other look into the datasheet
# Nplc=<double>                     Integrationtime in NetPowerLineCycles: <double> = 0 ... 20 (* 1/50Hz) [ms]; not sure about the double and min/max value
# ZeroCheck=<bool>                  Connect measurementchannel to reference resistor: <bool> = true/false
# ZeroCorrection=<bool>             Offsetcorrection: <bool> = true/false;
MeasureType=Curr
MeasureInstantly=0
Range=0
Nplc=5
ZeroCheck=false
ZeroCorrection=true
#---------------- DataPlot ----------------
# ChartIdentifier=Chart<int>        Plots data to Chart<int> (can have multiple entries separated by ",")
# ChartDrawnOver=<drawnOverSpec>    Plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
# ChartColor=<color>                Plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
#                                                   Good visible is: black, blue, brown, Green, Orange, Plum, Red, Purple
ChartIdentifier=Chart3
ChartDrawnOver=Time
ChartColor=gray


# FEAR16v2 provides as drawnOver: DevXY|Ch<int>|<Type>
#  where <Type> = CC (CurrentControl), CF (CurrentFlow), UD (FET VoltageDrop)
#  ATTENTION! CF and UD of the corresponding channel is not measured, the drawnOver-Value will be 0!
[Dev100|FEAR16v2]
#---------------- General settings ----------------
# ComPort=COM<uint>                 COM-Port of the device
# Baudrate=<uint>                   Communication speed of the device in [baud]
# Comment=<string>                  This is just for you
ComPort=COM5
Baudrate=921600
Comment=
#---------------- CurrentControl ----------------
# Ch<uint>CC=<int>							Channel 0-15 is connected to headercolumn: CC<int>
Ch0CC=0
Ch1CC=1
Ch2CC=2
Ch3CC=3
#---------------- CurrentFlow ----------------
# Ch<uint>CF=<int>							Channel 0-15 CurrentFlow measurement: <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
#   Hint: Unlisted Channels (no Ch<int>CF=<int> line) also disables the channel!
# Ch<uint>CFChartIdentifier=Chart<int>		Channel 0-15 plots data to Chart<int> (can have multiple entries separated by ",")
# Ch<uint>CFChartDrawnOver=<drawnOverSpec>	Channel 0-15 plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
# Ch<uint>CFChartColor=<color>				Channel 0-15 plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
# Ch<uint>CFCustomName=<string>			Channel 0-15 contains <string> in it's saved data-filename, otherwise the file gets a standard-filename
Ch0CF=0
Ch0CFChartIdentifier=Chart1
Ch0CFChartDrawnOver=Time
Ch0CFChartColor=red
Ch0CFCustomName=
Ch1CF=0
Ch1CFChartIdentifier=Chart1
Ch1CFChartDrawnOver=Time
Ch1CFChartColor=green
Ch1CFCustomName=
Ch2CF=0
Ch2CFChartIdentifier=Chart1
Ch2CFChartDrawnOver=Time
Ch2CFChartColor=blue
Ch2CFCustomName=
Ch3CF=0
Ch3CFChartIdentifier=Chart1
Ch3CFChartDrawnOver=Time
Ch3CFChartColor=orange
Ch3CFCustomName=
#---------------- FET VoltageDrop ----------------
# Ch<uint>UD=<int>							Channel 0-15 FET VoltageDrop measurement: <int> = -1 (disabled), 0 (@CycleEnd), 1 (CycleStart)
#   Hint: Unlisted Channels (no Ch<int>CF=<int> line) also disables the channel!
# Ch<uint>UDChartIdentifier=Chart<int>		Channel 0-15 plots data to Chart<int> (can have multiple entries separated by ",")
# Ch<uint>UDChartDrawnOver=<drawnOverSpec>	Channel 0-15 plots over: <drawnOver> = Time or check device-blocks for supported specifier; MUST have same or more entries as ChartIdentifier
# Ch<uint>UDChartColor=<color>				Channel 0-15 plots in color: <color> = check _ColorTable; MUST have same or more entries as ChartIdentifier
# Ch<uint>UDCustomName=<string>			Channel 0-15 contains <string> in it's saved data-filename, otherwise the file gets a standard-filename
Ch0UD=0
Ch0UDChartIdentifier=Chart2
Ch0UDChartDrawnOver=Time
Ch0UDChartColor=red
Ch0UDCustomName=
Ch1UD=0
Ch1UDChartIdentifier=Chart2
Ch1UDChartDrawnOver=Time
Ch1UDChartColor=green
Ch1UDCustomName=
Ch2UD=0
Ch2UDChartIdentifier=Chart2
Ch2UDChartDrawnOver=Time
Ch2UDChartColor=blue
Ch2UDCustomName=
Ch3UD=0
Ch3UDChartIdentifier=Chart2
Ch3UDChartDrawnOver=Time
Ch3UDChartColor=orange
Ch3UDCustomName=




# Chart-Blocks
[Chart1|CF vs Time]
# XAxisTitle=<string>                             Title for the x-axis
# YAxisTitle=<string>                             Title for the y-axis
# XAxisBoundaries=<fix><double>|<fix><double>     BETA-Feature
# YAxisBoundaries=<fix><double>|<fix><double>     BETA-Feature
#                                                 First  <fix>: @ will fix the lower boundary given by the first  <double>
#                                                 Second <fix>: @ will fix the upper boundary given by the second <double>
#                                                 Fixing only one boundary is not possible currently! You have to fix both!
# XAxisLogBase=<uint>                             <uint> is the log-base value for the x-axis (e.g. 0 and 1 is linear)
# YAxisLogBase=<uint>                             <uint> is the log-base value for the y-axis (e.g. 0 and 1 is linear)
# ShowLegend=<bool>                               Should the chart legend plotted
XAxisTitle=Time [s]
YAxisTitle=Current [I]
XAxisBoundaries=0|0
YAxisBoundaries=@1e-5|@20
XAxisLogBase=0
YAxisLogBase=10
ShowLegend=1

[Chart2|UD vs Time]
# XAxisTitle=<string>                             Title for the x-axis
# YAxisTitle=<string>                             Title for the y-axis
# XAxisBoundaries=<fix><double>|<fix><double>     BETA-Feature
# YAxisBoundaries=<fix><double>|<fix><double>     BETA-Feature
#                                                 First  <fix>: @ will fix the lower boundary given by the first  <double>
#                                                 Second <fix>: @ will fix the upper boundary given by the second <double>
#                                                 Fixing only one boundary is not possible currently! You have to fix both!
# XAxisLogBase=<uint>                             <uint> is the log-base value for the x-axis (e.g. 0 and 1 is linear)
# YAxisLogBase=<uint>                             <uint> is the log-base value for the y-axis (e.g. 0 and 1 is linear)
# ShowLegend=<bool>                               Should the chart legend plotted
XAxisTitle=Voltage [V]
YAxisTitle=Current [I]
XAxisBoundaries=0|0
YAxisBoundaries=@-50|@1550
XAxisLogBase=0
YAxisLogBase=10
ShowLegend=1



# Chart-Blocks
[Chart3|I_T vs Time]
# XAxisTitle=<string>                             Title for the x-axis
# YAxisTitle=<string>                             Title for the y-axis
# XAxisBoundaries=<fix><double>|<fix><double>     BETA-Feature
# YAxisBoundaries=<fix><double>|<fix><double>     BETA-Feature
#                                                 First  <fix>: @ will fix the lower boundary given by the first  <double>
#                                                 Second <fix>: @ will fix the upper boundary given by the second <double>
#                                                 Fixing only one boundary is not possible currently! You have to fix both!
# XAxisLogBase=<uint>                             <uint> is the log-base value for the x-axis (e.g. 0 and 1 is linear)
# YAxisLogBase=<uint>                             <uint> is the log-base value for the y-axis (e.g. 0 and 1 is linear)
# ShowLegend=<bool>                               Should the chart legend plotted
XAxisTitle=Time [s]
YAxisTitle=Current [I]
XAxisBoundaries=0|0
YAxisBoundaries=@1e-12|@100e-6
XAxisLogBase=0
YAxisLogBase=10
ShowLegend=1